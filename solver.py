#author = https://github.com/MrTimonM
import capsolver
import time
from colorama import Fore
import requests
import string
import random

session = requests.Session()


capsolver.api_key = input(Fore.CYAN + "[+]Enter capsolver API KEY: " + Fore.RESET)

PAGE_URL = "https://proxy2.webshare.io"
PAGE_KEY = "6LeHZ6UUAAAAAKat_YS--O2tj_by3gv3r_l03j9d"
ANCHOR = ""
RELOAD = ""


def solve_recaptcha_v2_invisible():
    start_time = time.time()
    solution = capsolver.solve({
        "type": "ReCaptchaV2TaskProxyLess",
        "websiteURL": PAGE_URL,
        "websiteKey": PAGE_KEY,
        "isInvisible": True,
        "anchor": ANCHOR,
        "reload": RELOAD
    })
    end_time = time.time()  # Record the end time
    response_time = end_time - start_time  # Calculate the response time
    return solution['gRecaptchaResponse'], response_time  # Return the captcha token and response time

def register_and_get_token(captcha_key=None):
    url = 'https://proxy.webshare.io/api/v2/register/'
    try:
        if captcha_key is None:
            captcha_key, _ = solve_recaptcha_v2_invisible()  # If captcha_key is not provided, solve recaptcha to get it
        email = ''.join(random.choice(string.ascii_letters) for x in range(random.randint(10, 14))) + "@gmail.com"
        password = f"heheH{random.randint(2000, 5000)}!"
        payload = {"email": email, "password": password, "tos_accepted": True, "recaptcha": captcha_key}
        response = session.post(url, json=payload)
        session.cookies = response.cookies
        token = response.json()['token']
        return token
    except Exception as e:
        print(f"Error creating webshare account: {e}")
        # Retry registration if there's an error
        return register_and_get_token(captcha_key)

def download_proxies():
    token = register_and_get_token()  # Get the token
    url = 'https://proxy.webshare.io/api/v2/proxy/config'
    headers = {
        "authorization": f"Token {token}",  # Include the token in the authorization header
        "origin": "https://proxy2.webshare.io",
        "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36"
    }

    response = requests.get(url, headers=headers)

    # Check if the request was successful (status code 200)
    if response.status_code == 200:
        # Parse the JSON response
        data = response.json()
        
        # Retrieve username and password
        username = data["username"]
        password = data["password"]
        download_token = data["proxy_list_download_token"]
        download = f'https://proxy.webshare.io/api/v2/proxy/list/download/{download_token}/-/any/username/direct/-/'

        get_proxy = requests.get(download)
        with open('proxy_list.txt', 'a') as file:
            file.write(get_proxy.text)
            
        print(Fore.GREEN + "[+]Proxy saved in proxy_list.txt" + Fore.RESET)
    else:
        print("Error")


def main():
    num_runs = int(input(Fore.CYAN + "[+]Enter how many times you want to run : " + Fore.RESET))
    for _ in range(num_runs):
        print(Fore.YELLOW + "[+]Solving reCAPTCHA v2....." + Fore.RESET)
        captcha_key, response_time = solve_recaptcha_v2_invisible()  # Get captcha token and response time
        #print(Fore.YELLOW + f"Time took to solve reCAPTCHA: {response_time} seconds" + Fore.RESET)
        #print(Fore.CYAN + "working........." + Fore.RESET)
        token = register_and_get_token(captcha_key)  # Register and get token
        download_proxies()  # Download proxies
        #time.sleep(1)  # Idle for 1 second before next run
    input(Fore.RED+"Press any key to exit..."+ Fore.RESET)

# Call the main function to execute the script
if __name__ == "__main__":
    main()
